<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.pet.user.mapper.UserMapper">
  
   <!-- 아이디 중복체크 -->
	  <select id="idCheck" resultType="int">
	  	select count(*) as result from users where id = #{id}
	  </select>
  
	  <insert id="join">
	  	insert into users
	  	(id, pw, name, phone1, phone2, email1, email2, 
	  	basicAdd, detailAdd, zipNum, quiz, answer, petTag)
	  	values
	  	(#{id},#{pw},#{name},#{phone1},#{phone2},#{email1},
	  	#{email2},#{basicAdd},#{detailAdd},#{zipNum},#{quiz},
	  	#{answer},#{petTag})
	  </insert>
	  

	  <select id="login" resultType="UserVO">
	  	select * from users where id = #{id} and pw = #{pw}
	  </select>
	  
	  <!-- 마이페이지 회원정보 -->
	<!-- 조인의 결과로 1:N 관계의 형태를 map으로 처리하는 방식에서 resultMap속성을 이용합니다. -->
	<!-- <select id="getInfo" resultMap="userInfo">
		select id,
		        name,
		        phone1,
		        phone2,
		        email1,
		        email2,
		        basicAdd,
		        detailAdd,
		        zipNum,
		        f.bno,
		        f.title,
		        f.regdate
		from USERS u left outer join REVIEWBOARD r
		on u.id = r.writer
		where u.id = {#id}
		order by r.review_bno desc
	</select> -->
  
  	<update id="update">
  		update users set 
  		name = #{name}, 
  		pw = #{pw}, 
  		email1 = #{email1}, 
  		email2 = #{email2}, 
  		phone1 = #{phone1},
  		phone2 = #{phone2},
  		basicAdd = #{basicAdd},
  		detailAdd = #{detailAdd},
  		zipNum = #{zipNum},
  		quiz = #{quiz},
  		answer = #{answer},
  		petTag = #{petTag}
  		where id = #{id}
  	</update>
  	

  	<delete id="delete">
  		delete from users where id = #{id} and pw = #{pw}
  	</delete>

	  <select id="userLogin" resultType="UserVO">
	  	select * from users where id = #{id} and pw = #{pw}
	  </select>
  
	<select id="findId" resultType="UserVO">
		select * from users where phone1 = #{phone1} and phone2 = #{phone2} and quiz = #{quiz} and answer = #{answer}
	</select>
	
	<select id="findPw" resultType="UserVO">
		select id from users where id = #{id} and quiz = #{quiz} and answer = #{answer}
	</select>
  
  	<update id = "updatePw">
  		update users set
  		pw = #{pw}
  		where id = #{id}
  	</update>
  	
  	<select id="heart" resultType="HeartVO">
  		select m.bno,
		       m.user_id,
		       category,
		       title,
		       s.review_avg,
		       pettag,
		       address
		from mygood m left outer join starboard s
		on m.bno = s.bno
		where m.user_id = #{user_Id}
		order by m.bno asc
  	</select>  	
  
  
  </mapper>